--- a/net/minecraft/server/level/ChunkMap.java
+++ b/net/minecraft/server/level/ChunkMap.java
@@ -939,7 +_,7 @@
             ChunkHolder chunkHolder = this.visibleChunkMap.get(spawnCandidateChunks.nextLong());
             if (chunkHolder != null) {
                 LevelChunk tickingChunk = chunkHolder.getTickingChunk();
-                if (tickingChunk != null && this.anyPlayerCloseEnoughForSpawningInternal(chunkHolder.getPos())) {
+                if (tickingChunk != null && this.anyPlayerCloseEnoughForSpawningInternal(chunkHolder.getPos(), true)) { // Spigot
                     output.add(tickingChunk);
                 }
             }
@@ -1278,7 +_,7 @@
         public final Set<ServerPlayerConnection> seenBy = Sets.newIdentityHashSet();
 
         public TrackedEntity(final Entity entity, final int range, final int updateInterval, final boolean trackDelta) {
-            this.serverEntity = new ServerEntity(ChunkMap.this.level, entity, updateInterval, trackDelta, this::broadcast, this::broadcastIgnorePlayers);
+            this.serverEntity = new ServerEntity(ChunkMap.this.level, entity, updateInterval, trackDelta, this::broadcast, this::broadcastIgnorePlayers, this.seenBy); // Paper
             this.entity = entity;
             this.range = range;
             this.lastSectionPos = SectionPos.of(entity);

From 3aeeaf31b7a7f888f54e47826e8ec0ddbe65c4bf Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 14:37:42 +0100
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/level/block/entity/DecoratedPotBlockEntity.java b/net/minecraft/world/level/block/entity/DecoratedPotBlockEntity.java
index c311a5d1d4d93afa10d9b3fb1cf4ac1c274a8fb4..dc47bb2ec3a8a4d3fbd1f64abbad1f293c57ae52 100644
--- a/net/minecraft/world/level/block/entity/DecoratedPotBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/DecoratedPotBlockEntity.java
@@ -20,6 +20,48 @@ import net.minecraft.world.level.storage.loot.LootTable;
 import net.minecraft.world.ticks.ContainerSingleItem;
 
 public class DecoratedPotBlockEntity extends BlockEntity implements RandomizableContainer, ContainerSingleItem.BlockContainerSingleItem {
+
+    // CraftBukkit start - add fields and methods
+    public List<org.bukkit.entity.HumanEntity> transaction = new java.util.ArrayList<>();
+    private int maxStack = MAX_STACK;
+
+    @Override
+    public List<ItemStack> getContents() {
+        return java.util.List.of(this.item);
+    }
+
+    @Override
+    public void onOpen(org.bukkit.craftbukkit.entity.CraftHumanEntity player) {
+        this.transaction.add(player);
+    }
+
+    @Override
+    public void onClose(org.bukkit.craftbukkit.entity.CraftHumanEntity player) {
+        this.transaction.remove(player);
+    }
+
+    @Override
+    public java.util.List<org.bukkit.entity.HumanEntity> getViewers() {
+        return this.transaction;
+    }
+
+    @Override
+    public int getMaxStackSize() {
+        return this.maxStack;
+    }
+
+    @Override
+    public void setMaxStackSize(int i) {
+        this.maxStack = i;
+    }
+
+    @Override
+    public org.bukkit.Location getLocation() {
+        if (this.level == null) return null;
+        return org.bukkit.craftbukkit.util.CraftLocation.toBukkit(this.worldPosition, this.level.getWorld());
+    }
+    // CraftBukkit end
+
     public static final String TAG_SHERDS = "sherds";
     public static final String TAG_ITEM = "item";
     public static final int EVENT_POT_WOBBLES = 1;
@@ -41,8 +83,8 @@ public class DecoratedPotBlockEntity extends BlockEntity implements Randomizable
     protected void saveAdditional(CompoundTag tag, HolderLookup.Provider registries) {
         super.saveAdditional(tag, registries);
         this.decorations.save(tag);
-        if (!this.trySaveLootTable(tag) && !this.item.isEmpty()) {
-            tag.put("item", this.item.save(registries));
+        if (!this.trySaveLootTable(tag) && !this.item.isEmpty()) { // Paper - diff on change - hide unnecessary update data
+            tag.put("item", this.item.save(registries)); // Paper - diff on change - hide unnecessary update data
         }
     }
 
@@ -66,7 +108,12 @@ public class DecoratedPotBlockEntity extends BlockEntity implements Randomizable
 
     @Override
     public CompoundTag getUpdateTag(HolderLookup.Provider registries) {
-        return this.saveCustomOnly(registries);
+        // Paper start - hide unnecessary update data
+        // Like chests, decorated pots should not allow clients to inspect their contents without breaking them.
+        final CompoundTag compoundTag = new CompoundTag();
+        this.decorations.save(compoundTag);
+        return compoundTag;
+        // Paper end - hide unnecessary update data
     }
 
     public Direction getDirection() {

From 3aeeaf31b7a7f888f54e47826e8ec0ddbe65c4bf Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 14:37:42 +0100
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/entity/NeutralMob.java b/net/minecraft/world/entity/NeutralMob.java
index 4d99d24e7e93b0f2692521fe2c85872403ec3429..180b17136fde74350f2083d2807670929fdfdfc1 100644
--- a/net/minecraft/world/entity/NeutralMob.java
+++ b/net/minecraft/world/entity/NeutralMob.java
@@ -39,18 +39,11 @@ public interface NeutralMob {
             } else {
                 UUID uuid = tag.getUUID("AngryAt");
                 this.setPersistentAngerTarget(uuid);
-                Entity entity = ((ServerLevel)level).getEntity(uuid);
-                if (entity != null) {
-                    if (entity instanceof Mob mob) {
-                        this.setTarget(mob);
-                        this.setLastHurtByMob(mob);
-                    }
-
-                    if (entity instanceof Player player) {
-                        this.setTarget(player);
-                        this.setLastHurtByPlayer(player);
-                    }
-                }
+                // Paper - Prevent entity loading causing async lookups; Moved diff to separate method
+                // If this entity already survived its first tick, e.g. is loaded and ticked in sync, actively
+                // tick the initial persistent anger.
+                // If not, let the first tick on the baseTick call the method later down the line.
+                if (this instanceof Entity entity && !entity.firstTick) this.tickInitialPersistentAnger(level);
             }
         }
     }
@@ -104,7 +97,7 @@ public interface NeutralMob {
     default void stopBeingAngry() {
         this.setLastHurtByMob(null);
         this.setPersistentAngerTarget(null);
-        this.setTarget(null);
+        this.setTarget(null, org.bukkit.event.entity.EntityTargetEvent.TargetReason.FORGOT_TARGET, true); // CraftBukkit
         this.setRemainingPersistentAngerTime(0);
     }
 
@@ -117,8 +110,33 @@ public interface NeutralMob {
 
     void setTarget(@Nullable LivingEntity livingEntity);
 
+    boolean setTarget(@Nullable LivingEntity entityliving, org.bukkit.event.entity.EntityTargetEvent.TargetReason reason, boolean fireEvent); // CraftBukkit
+
     boolean canAttack(LivingEntity entity);
 
     @Nullable
     LivingEntity getTarget();
+
+    // Paper start - Prevent entity loading causing async lookups
+    // Update last hurt when ticking
+    default void tickInitialPersistentAnger(Level level) {
+        UUID uuid = getPersistentAngerTarget();
+        if (uuid == null) {
+            return;
+        }
+
+        Entity entity = ((ServerLevel)level).getEntity(uuid);
+        if (entity != null) {
+            if (entity instanceof Mob mob) {
+                this.setTarget(mob, org.bukkit.event.entity.EntityTargetEvent.TargetReason.UNKNOWN, false); // CraftBukkit
+                this.setLastHurtByMob(mob);
+            }
+
+            if (entity instanceof Player player) {
+                this.setTarget(player, org.bukkit.event.entity.EntityTargetEvent.TargetReason.UNKNOWN, false); // CraftBukkit
+                this.setLastHurtByPlayer(player);
+            }
+        }
+    }
+    // Paper end - Prevent entity loading causing async lookups
 }

From 3aeeaf31b7a7f888f54e47826e8ec0ddbe65c4bf Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 14:37:42 +0100
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/entity/projectile/ThrownTrident.java b/net/minecraft/world/entity/projectile/ThrownTrident.java
index 44ea55a3d43dc0be01e1f739aca052a9d565427d..2c66f788759330fba412ccb2187945b6ca0cacb6 100644
--- a/net/minecraft/world/entity/projectile/ThrownTrident.java
+++ b/net/minecraft/world/entity/projectile/ThrownTrident.java
@@ -32,16 +32,19 @@ public class ThrownTrident extends AbstractArrow {
 
     public ThrownTrident(EntityType<? extends ThrownTrident> entityType, Level level) {
         super(entityType, level);
+        this.setBaseDamage(net.minecraft.world.item.TridentItem.BASE_DAMAGE); // Paper - Allow trident custom damage
     }
 
     public ThrownTrident(Level level, LivingEntity shooter, ItemStack pickupItemStack) {
         super(EntityType.TRIDENT, shooter, level, pickupItemStack, null);
+        this.setBaseDamage(net.minecraft.world.item.TridentItem.BASE_DAMAGE); // Paper - Allow trident custom damage
         this.entityData.set(ID_LOYALTY, this.getLoyaltyFromItem(pickupItemStack));
         this.entityData.set(ID_FOIL, pickupItemStack.hasFoil());
     }
 
     public ThrownTrident(Level level, double x, double y, double z, ItemStack pickupItemStack) {
         super(EntityType.TRIDENT, x, y, z, level, pickupItemStack, pickupItemStack);
+        this.setBaseDamage(net.minecraft.world.item.TridentItem.BASE_DAMAGE); // Paper - Allow trident custom damage
         this.entityData.set(ID_LOYALTY, this.getLoyaltyFromItem(pickupItemStack));
         this.entityData.set(ID_FOIL, pickupItemStack.hasFoil());
     }
@@ -67,10 +70,10 @@ public class ThrownTrident extends AbstractArrow {
                     this.spawnAtLocation(serverLevel, this.getPickupItem(), 0.1F);
                 }
 
-                this.discard();
+                this.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.DROP); // CraftBukkit - add Bukkit remove cause
             } else {
                 if (!(owner instanceof Player) && this.position().distanceTo(owner.getEyePosition()) < owner.getBbWidth() + 1.0) {
-                    this.discard();
+                    this.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - add Bukkit remove cause
                     return;
                 }
 
@@ -99,6 +102,20 @@ public class ThrownTrident extends AbstractArrow {
         return this.entityData.get(ID_FOIL);
     }
 
+    // Paper start
+    public void setFoil(boolean foil) {
+        this.entityData.set(ThrownTrident.ID_FOIL, foil);
+    }
+
+    public int getLoyalty() {
+        return this.entityData.get(ThrownTrident.ID_LOYALTY);
+    }
+
+    public void setLoyalty(byte loyalty) {
+        this.entityData.set(ThrownTrident.ID_LOYALTY, loyalty);
+    }
+    // Paper end
+
     @Nullable
     @Override
     protected EntityHitResult findHitEntity(Vec3 startVec, Vec3 endVec) {
@@ -108,7 +125,7 @@ public class ThrownTrident extends AbstractArrow {
     @Override
     protected void onHitEntity(EntityHitResult result) {
         Entity entity = result.getEntity();
-        float f = 8.0F;
+        float f = (float) this.getBaseDamage(); // Paper - Allow trident custom damage
         Entity owner = this.getOwner();
         DamageSource damageSource = this.damageSources().trident(this, (Entity)(owner == null ? this : owner));
         if (this.level() instanceof ServerLevel serverLevel) {

From 3aeeaf31b7a7f888f54e47826e8ec0ddbe65c4bf Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 14:37:42 +0100
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/entity/animal/horse/SkeletonTrapGoal.java b/net/minecraft/world/entity/animal/horse/SkeletonTrapGoal.java
index ae7be053b0ae5f24984ef880000265dd0a42e5e6..141d526d27d48ce9656ba39885c28623c8328d4f 100644
--- a/net/minecraft/world/entity/animal/horse/SkeletonTrapGoal.java
+++ b/net/minecraft/world/entity/animal/horse/SkeletonTrapGoal.java
@@ -18,6 +18,7 @@ import net.minecraft.world.item.enchantment.providers.VanillaEnchantmentProvider
 
 public class SkeletonTrapGoal extends Goal {
     private final SkeletonHorse horse;
+    private java.util.List<org.bukkit.entity.HumanEntity> eligiblePlayers; // Paper
 
     public SkeletonTrapGoal(SkeletonHorse horse) {
         this.horse = horse;
@@ -25,12 +26,13 @@ public class SkeletonTrapGoal extends Goal {
 
     @Override
     public boolean canUse() {
-        return this.horse.level().hasNearbyAlivePlayer(this.horse.getX(), this.horse.getY(), this.horse.getZ(), 10.0);
+        return !(this.eligiblePlayers = this.horse.level().findNearbyBukkitPlayers(this.horse.getX(), this.horse.getY(), this.horse.getZ(), 10.0, net.minecraft.world.entity.EntitySelector.PLAYER_AFFECTS_SPAWNING)).isEmpty(); // Paper - Affects Spawning API & SkeletonHorseTrapEvent
     }
 
     @Override
     public void tick() {
         ServerLevel serverLevel = (ServerLevel)this.horse.level();
+        if (!new com.destroystokyo.paper.event.entity.SkeletonHorseTrapEvent((org.bukkit.entity.SkeletonHorse) this.horse.getBukkitEntity(), this.eligiblePlayers).callEvent()) return; // Paper
         DifficultyInstance currentDifficultyAt = serverLevel.getCurrentDifficultyAt(this.horse.blockPosition());
         this.horse.setTrap(false);
         this.horse.setTamed(true);
@@ -39,11 +41,11 @@ public class SkeletonTrapGoal extends Goal {
         if (lightningBolt != null) {
             lightningBolt.moveTo(this.horse.getX(), this.horse.getY(), this.horse.getZ());
             lightningBolt.setVisualOnly(true);
-            serverLevel.addFreshEntity(lightningBolt);
+            serverLevel.strikeLightning(lightningBolt, org.bukkit.event.weather.LightningStrikeEvent.Cause.TRAP); // CraftBukkit
             Skeleton skeleton = this.createSkeleton(currentDifficultyAt, this.horse);
             if (skeleton != null) {
                 skeleton.startRiding(this.horse);
-                serverLevel.addFreshEntityWithPassengers(skeleton);
+                serverLevel.addFreshEntityWithPassengers(skeleton, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.TRAP); // CraftBukkit
 
                 for (int i = 0; i < 3; i++) {
                     AbstractHorse abstractHorse = this.createHorse(currentDifficultyAt);
@@ -52,7 +54,7 @@ public class SkeletonTrapGoal extends Goal {
                         if (skeleton1 != null) {
                             skeleton1.startRiding(abstractHorse);
                             abstractHorse.push(this.horse.getRandom().triangle(0.0, 1.1485), 0.0, this.horse.getRandom().triangle(0.0, 1.1485));
-                            serverLevel.addFreshEntityWithPassengers(abstractHorse);
+                            serverLevel.addFreshEntityWithPassengers(abstractHorse, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.JOCKEY); // CraftBukkit
                         }
                     }
                 }

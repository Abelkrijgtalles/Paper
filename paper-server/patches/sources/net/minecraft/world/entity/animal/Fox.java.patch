From 3aeeaf31b7a7f888f54e47826e8ec0ddbe65c4bf Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 14:37:42 +0100
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/world/entity/animal/Fox.java b/net/minecraft/world/entity/animal/Fox.java
index 48cc89d950c07987886906d10f8f019d52cfb9af..b4f3bc7938060cf55b6b242759606bf5100a1f56 100644
--- a/net/minecraft/world/entity/animal/Fox.java
+++ b/net/minecraft/world/entity/animal/Fox.java
@@ -413,7 +413,7 @@ public class Fox extends Animal implements VariantHolder<Fox.Variant> {
 
         this.setSleeping(compound.getBoolean("Sleeping"));
         this.setVariant(Fox.Variant.byName(compound.getString("Type")));
-        this.setSitting(compound.getBoolean("Sitting"));
+        this.setSitting(compound.getBoolean("Sitting"), false); // Paper - Add EntityToggleSitEvent
         this.setIsCrouching(compound.getBoolean("Crouching"));
         if (this.level() instanceof ServerLevel) {
             this.setTargetGoals();
@@ -425,6 +425,12 @@ public class Fox extends Animal implements VariantHolder<Fox.Variant> {
     }
 
     public void setSitting(boolean sitting) {
+        // Paper start - Add EntityToggleSitEvent
+        this.setSitting(sitting, true);
+    }
+    public void setSitting(boolean sitting, boolean fireEvent) {
+        if (fireEvent && !new io.papermc.paper.event.entity.EntityToggleSitEvent(this.getBukkitEntity(), sitting).callEvent()) return;
+        // Paper end - Add EntityToggleSitEvent
         this.setFlag(1, sitting);
     }
 
@@ -484,19 +490,20 @@ public class Fox extends Animal implements VariantHolder<Fox.Variant> {
             itemEntity.setPickUpDelay(40);
             itemEntity.setThrower(this);
             this.playSound(SoundEvents.FOX_SPIT, 1.0F, 1.0F);
-            this.level().addFreshEntity(itemEntity);
+            this.spawnAtLocation((net.minecraft.server.level.ServerLevel) this.level(), itemEntity); // Paper - Call EntityDropItemEvent
         }
     }
 
     private void dropItemStack(ItemStack stack) {
         ItemEntity itemEntity = new ItemEntity(this.level(), this.getX(), this.getY(), this.getZ(), stack);
-        this.level().addFreshEntity(itemEntity);
+        this.spawnAtLocation((net.minecraft.server.level.ServerLevel) this.level(), itemEntity); // Paper - Call EntityDropItemEvent
     }
 
     @Override
     protected void pickUpItem(ServerLevel level, ItemEntity entity) {
         ItemStack item = entity.getItem();
-        if (this.canHoldItem(item)) {
+        if (!org.bukkit.craftbukkit.event.CraftEventFactory.callEntityPickupItemEvent(this, entity, item.getCount() - 1, !this.canHoldItem(item)).isCancelled()) { // CraftBukkit - call EntityPickupItemEvent
+            item = entity.getItem(); // CraftBukkit - update item after event
             int count = item.getCount();
             if (count > 1) {
                 this.dropItemStack(item.split(count - 1));
@@ -507,7 +514,7 @@ public class Fox extends Animal implements VariantHolder<Fox.Variant> {
             this.setItemSlot(EquipmentSlot.MAINHAND, item.split(1));
             this.setGuaranteedDrop(EquipmentSlot.MAINHAND);
             this.take(entity, item.getCount());
-            entity.discard();
+            entity.discard(org.bukkit.event.entity.EntityRemoveEvent.Cause.PICKUP); // CraftBukkit - add Bukkit remove cause
             this.ticksSinceEaten = 0;
         }
     }
@@ -671,15 +678,33 @@ public class Fox extends Animal implements VariantHolder<Fox.Variant> {
         return this.getTrustedUUIDs().contains(uuid);
     }
 
+    // Paper start - handle the bitten item separately like vanilla
+    @Override
+    protected boolean shouldSkipLoot(EquipmentSlot slot) {
+        return slot == EquipmentSlot.MAINHAND;
+    }
+    // Paper end
+
     @Override
-    protected void dropAllDeathLoot(ServerLevel level, DamageSource damageSource) {
+    // Paper start - Cancellable death event
+    protected org.bukkit.event.entity.EntityDeathEvent dropAllDeathLoot(ServerLevel level, DamageSource damageSource) {
         ItemStack itemBySlot = this.getItemBySlot(EquipmentSlot.MAINHAND);
-        if (!itemBySlot.isEmpty()) {
+        boolean releaseMouth = false;
+        if (!itemBySlot.isEmpty() && level.getGameRules().getBoolean(GameRules.RULE_DOMOBLOOT)) { // Fix MC-153010
             this.spawnAtLocation(level, itemBySlot);
+            releaseMouth = true;
+        }
+
+        org.bukkit.event.entity.EntityDeathEvent deathEvent = super.dropAllDeathLoot(level, damageSource);
+        // Below is code to drop
+        if (deathEvent == null || deathEvent.isCancelled()) return deathEvent;
+
+        if (releaseMouth) {
+            // Paper end
             this.setItemSlot(EquipmentSlot.MAINHAND, ItemStack.EMPTY);
         }
 
-        super.dropAllDeathLoot(level, damageSource);
+        return deathEvent; // Paper - Cancellable death event
     }
 
     public static boolean isPathClear(Fox fox, LivingEntity livingEntity) {
@@ -853,6 +878,18 @@ public class Fox extends Animal implements VariantHolder<Fox.Variant> {
                 if (loveCause1 != null && loveCause != loveCause1) {
                     fox.addTrustedUUID(loveCause1.getUUID());
                 }
+                // CraftBukkit start - call EntityBreedEvent
+                fox.setAge(-24000);
+                fox.moveTo(this.animal.getX(), this.animal.getY(), this.animal.getZ(), 0.0F, 0.0F);
+                int experience = this.animal.getRandom().nextInt(7) + 1;
+                org.bukkit.event.entity.EntityBreedEvent entityBreedEvent = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityBreedEvent(fox, this.animal, this.partner, loveCause, this.animal.breedItem, experience);
+                if (entityBreedEvent.isCancelled()) {
+                    this.animal.resetLove();
+                    this.partner.resetLove();
+                    return;
+                }
+                experience = entityBreedEvent.getExperience();
+                // CraftBukkit end - call EntityBreedEvent
 
                 if (serverPlayer != null) {
                     serverPlayer.awardStat(Stats.ANIMALS_BRED);
@@ -863,14 +900,12 @@ public class Fox extends Animal implements VariantHolder<Fox.Variant> {
                 this.partner.setAge(6000);
                 this.animal.resetLove();
                 this.partner.resetLove();
-                fox.setAge(-24000);
-                fox.moveTo(this.animal.getX(), this.animal.getY(), this.animal.getZ(), 0.0F, 0.0F);
-                serverLevel.addFreshEntityWithPassengers(fox);
+                serverLevel.addFreshEntityWithPassengers(fox, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.BREEDING); // CraftBukkit - added SpawnReason
                 this.level.broadcastEntityEvent(this.animal, (byte)18);
-                if (serverLevel.getGameRules().getBoolean(GameRules.RULE_DOMOBLOOT)) {
+                if (experience > 0 && serverLevel.getGameRules().getBoolean(GameRules.RULE_DOMOBLOOT)) { // Paper - call EntityBreedEvent
                     this.level
                         .addFreshEntity(
-                            new ExperienceOrb(this.level, this.animal.getX(), this.animal.getY(), this.animal.getZ(), this.animal.getRandom().nextInt(7) + 1)
+                            new ExperienceOrb(this.level, this.animal.getX(), this.animal.getY(), this.animal.getZ(), experience, org.bukkit.entity.ExperienceOrb.SpawnReason.BREED, loveCause, fox) // Paper - call EntityBreedEvent, add spawn context
                         );
                 }
             }
@@ -934,6 +969,7 @@ public class Fox extends Animal implements VariantHolder<Fox.Variant> {
         private void pickSweetBerries(BlockState state) {
             int ageValue = state.getValue(SweetBerryBushBlock.AGE);
             state.setValue(SweetBerryBushBlock.AGE, Integer.valueOf(1));
+            if (!org.bukkit.craftbukkit.event.CraftEventFactory.callEntityChangeBlockEvent(Fox.this, this.blockPos, state.setValue(SweetBerryBushBlock.AGE, 1))) return; // CraftBukkit - call EntityChangeBlockEvent
             int i = 1 + Fox.this.level().random.nextInt(2) + (ageValue == 3 ? 1 : 0);
             ItemStack itemBySlot = Fox.this.getItemBySlot(EquipmentSlot.MAINHAND);
             if (itemBySlot.isEmpty()) {

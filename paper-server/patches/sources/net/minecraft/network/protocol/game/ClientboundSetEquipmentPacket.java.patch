From 6a0255d07a09045c7b0d3db3fa88ccfd06092226 Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 14:37:42 +0100
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket.java b/net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket.java
index 7810c637c707dd7678461f2b554a7971cd60b92f..59198e1f248c812185cbb1d4290a79ed1a1b3f11 100644
--- a/net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket.java
+++ b/net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket.java
@@ -19,6 +19,13 @@ public class ClientboundSetEquipmentPacket implements Packet<ClientGamePacketLis
     private final List<Pair<EquipmentSlot, ItemStack>> slots;
 
     public ClientboundSetEquipmentPacket(int entity, List<Pair<EquipmentSlot, ItemStack>> slots) {
+    // Paper start - data sanitization
+        this(entity, slots, false);
+    }
+    private boolean sanitize;
+    public ClientboundSetEquipmentPacket(int entity, List<Pair<EquipmentSlot, ItemStack>> slots, boolean sanitize) {
+        this.sanitize = sanitize;
+    // Paper end - data sanitization
         this.entity = entity;
         this.slots = slots;
     }
@@ -40,6 +47,7 @@ public class ClientboundSetEquipmentPacket implements Packet<ClientGamePacketLis
         buffer.writeVarInt(this.entity);
         int size = this.slots.size();
 
+        try (final io.papermc.paper.util.ItemObfuscationSession ignored = io.papermc.paper.util.ItemObfuscationSession.start(this.sanitize ? io.papermc.paper.configuration.GlobalConfiguration.get().anticheat.obfuscation.items.binding.level : io.papermc.paper.util.ItemObfuscationSession.ObfuscationLevel.NONE)) { // Paper - data sanitization
         for (int i = 0; i < size; i++) {
             Pair<EquipmentSlot, ItemStack> pair = this.slots.get(i);
             EquipmentSlot equipmentSlot = pair.getFirst();
@@ -48,6 +56,7 @@ public class ClientboundSetEquipmentPacket implements Packet<ClientGamePacketLis
             buffer.writeByte(flag ? ordinal | -128 : ordinal);
             ItemStack.OPTIONAL_STREAM_CODEC.encode(buffer, pair.getSecond());
         }
+        } // Paper - data sanitization
     }
 
     @Override

From 3aeeaf31b7a7f888f54e47826e8ec0ddbe65c4bf Mon Sep 17 00:00:00 2001
From: File <noreply+automated@papermc.io>
Date: Sun, 20 Apr 1997 14:37:42 +0100
Subject: [PATCH] paper File Patches


diff --git a/net/minecraft/network/chat/contents/TranslatableContents.java b/net/minecraft/network/chat/contents/TranslatableContents.java
index e39a242b60225f29908ab111cbce7af032dab1c8..68727deaedd55aa86e76fbc6cc2cfb67913f7add 100644
--- a/net/minecraft/network/chat/contents/TranslatableContents.java
+++ b/net/minecraft/network/chat/contents/TranslatableContents.java
@@ -181,6 +181,16 @@ public class TranslatableContents implements ComponentContents {
 
     @Override
     public <T> Optional<T> visit(FormattedText.ContentConsumer<T> contentConsumer) {
+        // Paper start - Count visited parts
+        try {
+            return this.visit(new TranslatableContentConsumer<>(contentConsumer));
+        } catch (IllegalArgumentException ignored) {
+            return contentConsumer.accept("...");
+        }
+    }
+
+    private <T> Optional<T> visit(TranslatableContentConsumer<T> contentConsumer) {
+        // Paper end - Count visited parts
         this.decompose();
 
         for (FormattedText formattedText : this.decomposedParts) {
@@ -193,6 +203,27 @@ public class TranslatableContents implements ComponentContents {
         return Optional.empty();
     }
 
+    // Paper start - Count visited parts
+    private static final class TranslatableContentConsumer<T> implements FormattedText.ContentConsumer<T> {
+        private static final IllegalArgumentException NESTED_TOO_LONG = new IllegalArgumentException("Too long");
+
+        private final FormattedText.ContentConsumer<T> visitor;
+        private int visited;
+
+        private TranslatableContentConsumer(final FormattedText.ContentConsumer<T> visitor) {
+            this.visitor = visitor;
+        }
+
+        @Override
+        public Optional<T> accept(final String asString) {
+            if (this.visited++ > 32) {
+                throw NESTED_TOO_LONG;
+            }
+            return this.visitor.accept(asString);
+        }
+    }
+    // Paper end - Count visited parts
+
     @Override
     public MutableComponent resolve(@Nullable CommandSourceStack nbtPathPattern, @Nullable Entity entity, int recursionDepth) throws CommandSyntaxException {
         Object[] objects = new Object[this.args.length];
